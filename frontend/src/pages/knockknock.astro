---
// Admin login page - accessible at /knockknock
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Login - Portfolio</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      :root {
        --bg-color: #0a0a0a;
        --card-bg: rgba(20, 20, 20, 0.8);
        --text-primary: #ffffff;
        --text-secondary: #cccccc;
        --accent-color: #ffd700;
        --error-color: #ff4444;
        --success-color: #44ff44;
        --border-color: rgba(255, 255, 255, 0.1);
        --shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
      }

      [data-theme="light"] {
        --bg-color: #f5f5f5;
        --card-bg: rgba(255, 255, 255, 0.9);
        --text-primary: #333333;
        --text-secondary: #666666;
        --accent-color: #007acc;
        --error-color: #cc3333;
        --success-color: #33cc33;
        --border-color: rgba(0, 0, 0, 0.1);
        --shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      }

      body {
        font-family: 'Arial', sans-serif;
        background: var(--bg-color);
        color: var(--text-primary);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
      }

      /* Animated background */
      .bg-animation {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        background: radial-gradient(circle at 20% 50%, rgba(255, 215, 0, 0.1) 0%, transparent 50%),
                    radial-gradient(circle at 80% 20%, rgba(0, 122, 204, 0.1) 0%, transparent 50%),
                    radial-gradient(circle at 40% 80%, rgba(255, 68, 68, 0.1) 0%, transparent 50%);
        animation: drift 20s ease-in-out infinite;
      }

      @keyframes drift {
        0%, 100% { transform: translate(0, 0) rotate(0deg); }
        33% { transform: translate(30px, -30px) rotate(1deg); }
        66% { transform: translate(-20px, 20px) rotate(-1deg); }
      }

      .login-container {
        background: var(--card-bg);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        border: 1px solid var(--border-color);
        box-shadow: var(--shadow);
        padding: 3rem;
        width: 100%;
        max-width: 400px;
        position: relative;
        animation: slideIn 0.6s ease-out;
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateY(30px) scale(0.95);
        }
        to {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }

      .theme-toggle {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: none;
        border: 1px solid var(--border-color);
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 1.2rem;
        color: var(--text-primary);
        transition: all 0.3s ease;
      }

      .theme-toggle:hover {
        background: var(--accent-color);
        color: var(--bg-color);
        transform: scale(1.1);
      }

      .login-header {
        text-align: center;
        margin-bottom: 2rem;
      }

      .login-title {
        font-size: 2rem;
        font-weight: bold;
        color: var(--accent-color);
        margin-bottom: 0.5rem;
      }

      .login-subtitle {
        color: var(--text-secondary);
        font-size: 0.9rem;
      }

      .form-group {
        margin-bottom: 1.5rem;
      }

      .form-label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--text-secondary);
        font-weight: 500;
      }

      .form-input {
        width: 100%;
        padding: 1rem;
        border: 1px solid var(--border-color);
        border-radius: 10px;
        background: rgba(255, 255, 255, 0.05);
        color: var(--text-primary);
        font-size: 1rem;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
      }

      .form-input:focus {
        outline: none;
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba(255, 215, 0, 0.1);
        transform: translateY(-2px);
      }

      .login-btn {
        width: 100%;
        padding: 1rem;
        background: linear-gradient(135deg, var(--accent-color), #b8860b);
        color: var(--bg-color);
        border: none;
        border-radius: 10px;
        font-size: 1rem;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }

      .login-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(255, 215, 0, 0.3);
      }

      .login-btn:active {
        transform: translateY(0);
      }

      .login-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
      }

      .error-message {
        background: rgba(255, 68, 68, 0.1);
        border: 1px solid var(--error-color);
        color: var(--error-color);
        padding: 1rem;
        border-radius: 10px;
        margin-bottom: 1rem;
        font-size: 0.9rem;
        animation: shake 0.5s ease-in-out;
      }

      .success-message {
        background: rgba(68, 255, 68, 0.1);
        border: 1px solid var(--success-color);
        color: var(--success-color);
        padding: 1rem;
        border-radius: 10px;
        margin-bottom: 1rem;
        font-size: 0.9rem;
      }

      @keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        75% { transform: translateX(5px); }
      }

      .loading-spinner {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: currentColor;
        animation: spin 1s ease-in-out infinite;
        margin-right: 0.5rem;
      }

      @keyframes spin {
        to { transform: rotate(360deg); }
      }

      .hidden {
        display: none;
      }

      /* Mobile responsiveness */
      @media (max-width: 480px) {
        .login-container {
          margin: 1rem;
          padding: 2rem;
        }

        .login-title {
          font-size: 1.5rem;
        }
      }
    </style>
  </head>
  <body>
    <div class="bg-animation"></div>
    
    <div class="login-container">
      <button class="theme-toggle" id="themeToggle" title="Toggle theme">
        üåô
      </button>
      
      <div class="login-header">
        <h1 class="login-title">Admin Access</h1>
        <p class="login-subtitle">Enter your credentials to continue</p>
      </div>

      <form id="loginForm">
        <div id="errorMessage" class="error-message hidden"></div>
        <div id="successMessage" class="success-message hidden"></div>

        <div class="form-group">
          <label for="username" class="form-label">Username</label>
          <input 
            type="text" 
            id="username" 
            name="username" 
            class="form-input" 
            required
            autocomplete="username"
            placeholder="Enter username"
          />
        </div>

        <div class="form-group">
          <label for="password" class="form-label">Password</label>
          <input 
            type="password" 
            id="password" 
            name="password" 
            class="form-input" 
            required
            autocomplete="current-password"
            placeholder="Enter password"
          />
        </div>

        <button type="submit" class="login-btn" id="loginBtn">
          <span id="loginBtnText">Sign In</span>
          <span id="loginSpinner" class="loading-spinner hidden"></span>
        </button>
      </form>
    </div>

    <script>
      // Theme management
      const themeToggle = document.getElementById('themeToggle');
      const body = document.body;
      
      // Check for saved theme preference or default to dark
      const currentTheme = localStorage.getItem('theme') || 'dark';
      if (currentTheme === 'light') {
        body.setAttribute('data-theme', 'light');
        themeToggle.textContent = '‚òÄÔ∏è';
      }

      themeToggle.addEventListener('click', () => {
        const currentTheme = body.getAttribute('data-theme');
        if (currentTheme === 'light') {
          body.removeAttribute('data-theme');
          themeToggle.textContent = 'üåô';
          localStorage.setItem('theme', 'dark');
        } else {
          body.setAttribute('data-theme', 'light');
          themeToggle.textContent = '‚òÄÔ∏è';
          localStorage.setItem('theme', 'light');
        }
      });

      // Login form management
      const loginForm = document.getElementById('loginForm');
      const errorMessage = document.getElementById('errorMessage');
      const successMessage = document.getElementById('successMessage');
      const loginBtn = document.getElementById('loginBtn');
      const loginBtnText = document.getElementById('loginBtnText');
      const loginSpinner = document.getElementById('loginSpinner');

      function showError(message) {
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
        successMessage.classList.add('hidden');
      }

      function showSuccess(message) {
        successMessage.textContent = message;
        successMessage.classList.remove('hidden');
        errorMessage.classList.add('hidden');
      }

      function hideMessages() {
        errorMessage.classList.add('hidden');
        successMessage.classList.add('hidden');
      }

      function setLoading(loading) {
        loginBtn.disabled = loading;
        if (loading) {
          loginBtnText.textContent = 'Signing in...';
          loginSpinner.classList.remove('hidden');
        } else {
          loginBtnText.textContent = 'Sign In';
          loginSpinner.classList.add('hidden');
        }
      }

      loginForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        if (!username || !password) {
          showError('Please enter both username and password');
          return;
        }

        setLoading(true);
        hideMessages();

        try {
          const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ username, password }),
          });

          const data = await response.json();

          if (data.success) {
            // Store JWT token
            localStorage.setItem('adminToken', data.data.token);
            localStorage.setItem('tokenExpires', data.data.expires_at);
            
            showSuccess('Login successful! Redirecting...');
            
            // Redirect to admin dashboard after short delay
            setTimeout(() => {
              window.location.href = window.location.origin + '/admin/';
            }, 1500);
          } else {
            showError(data.message || 'Login failed');
          }
        } catch (error) {
          console.error('Login error:', error);
          showError('Network error. Please try again.');
        } finally {
          setLoading(false);
        }
      });

      // Check if user is already logged in
      document.addEventListener('DOMContentLoaded', () => {
        const token = localStorage.getItem('adminToken');
        const expires = localStorage.getItem('tokenExpires');
        
        if (token && expires) {
          const expiresDate = new Date(expires);
          if (expiresDate > new Date()) {
            // Token is still valid, redirect to admin
            window.location.href = window.location.origin + '/admin/';
            return;
          } else {
            // Token expired, clear it
            localStorage.removeItem('adminToken');
            localStorage.removeItem('tokenExpires');
          }
        }
      });

      // Auto-focus username field
      document.getElementById('username').focus();
    </script>
  </body>
</html>