---
// Theme toggle button component
---

<button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode">
  <span class="theme-icon theme-icon-light">‚òÄÔ∏è</span>
  <span class="theme-icon theme-icon-dark">üåô</span>
</button>

<style>
  .theme-toggle {
    position: fixed;
    bottom: 20px;
    left: 20px;
    z-index: 1000;
    background: linear-gradient(135deg, #333, #666);
    border: 2px solid #555;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }

  .theme-toggle:hover {
    background: linear-gradient(135deg, #444, #777);
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
  }

  .theme-toggle:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .theme-icon {
    transition: opacity 0.3s ease, transform 0.3s ease;
    position: absolute;
  }

  /* Default state (light theme) - show moon to indicate "click to go dark" */
  .theme-icon-light {
    opacity: 0;
    transform: rotate(180deg);
  }

  .theme-icon-dark {
    opacity: 1;
    transform: rotate(0deg);
  }

  /* Dark theme - show sun to indicate "click to go light" */
  :global([data-theme="dark"]) .theme-icon-light {
    opacity: 1;
    transform: rotate(0deg);
  }

  :global([data-theme="dark"]) .theme-icon-dark {
    opacity: 0;
    transform: rotate(-180deg);
  }

  :global([data-theme="dark"]) .theme-toggle {
    background: linear-gradient(135deg, #ffd700, #b8860b);
    border-color: #daa520;
  }

  :global([data-theme="dark"]) .theme-toggle:hover {
    background: linear-gradient(135deg, #ffed4e, #daa520);
  }

  @media (max-width: 768px) {
    .theme-toggle {
      width: 40px;
      height: 40px;
      font-size: 16px;
      bottom: 15px;
      left: 15px;
    }
  }
</style>

<script>
  function initTheme() {
    // Get saved theme from localStorage or default to dark
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', savedTheme);
  }

  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
  }

  // Initialize theme immediately (run right away, not waiting for DOM)
  (function() {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', savedTheme);
  })();

  // Add click event listener when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    initTheme(); // Ensure theme is set
    const toggleButton = document.getElementById('theme-toggle');
    if (toggleButton) {
      toggleButton.addEventListener('click', toggleTheme);
    }
  });

  // Also run on Astro page transitions if any
  document.addEventListener('astro:page-load', () => {
    initTheme();
    const toggleButton = document.getElementById('theme-toggle');
    if (toggleButton) {
      toggleButton.addEventListener('click', toggleTheme);
    }
  });
</script>